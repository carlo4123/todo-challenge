[{"C:\\Users\\VioLaToR\\Desktop\\devChallenge\\Frontend\\challenge\\todo\\src\\index.js":"1","C:\\Users\\VioLaToR\\Desktop\\devChallenge\\Frontend\\challenge\\todo\\src\\App.js":"2","C:\\Users\\VioLaToR\\Desktop\\devChallenge\\Frontend\\challenge\\todo\\src\\TodoItem.js":"3"},{"size":160,"mtime":1610532129841,"results":"4","hashOfConfig":"5"},{"size":2588,"mtime":1610622431118,"results":"6","hashOfConfig":"5"},{"size":821,"mtime":1610614910243,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ywpmg5",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\VioLaToR\\Desktop\\devChallenge\\Frontend\\challenge\\todo\\src\\index.js",[],"C:\\Users\\VioLaToR\\Desktop\\devChallenge\\Frontend\\challenge\\todo\\src\\App.js",["16"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, NavLink, Route } from 'react-router-dom';\nimport './style.scss';\nimport TodoItem from './TodoItem';\n// import {Route , BrowserRouter as Router, switch } from 'react-router-dom'\nfunction App() {\n\n  const [state, setState] =useState({\n    todo: \"\",\n    todoList: []\n  })\n\n  const {todo, todoList} = state\n\n  const handleAdd = () => {\n    const list = todoList\n\n    if(todo.length > 0){\n      list.push({item: todo, completed: false, id: list.length})\n      setState({todo: \"\", todoList: list})\n    }else{\n      alert(\"cant add empty String\")\n    }\n    \n   \n\n    \n    \n  }\n\n\n  const handleOnChange = (e) =>{\n   const {name,value} = e.target\n    \n   setState({...state, [name]: value})\n  }\n\nconsole.log(state)\n\nconst handleCheck = (e) => {\n  const index = e.target.id\n  const newList = [...state.todoList]\n\n  console.log(\"new list\",newList)\n\n  \n  if(newList[index].completed){\n    newList[index] = {...newList[index], completed: false}\n    setState({...state, todoList: newList})\n  }else{\n    newList[index] = {...newList[index], completed: true}\n\n    setState({...state, todoList: newList})\n  }\n\n}\n\n\nconst url = window.location.pathname \n// }\n  return (\n    <Router>\n    <div className=\"App\">\n      <div className=\"main\">\n        <div className=\"container\">\n\n      <h1 className=\"title\">#todo</h1>\n\n      <nav className=\"nav\">\n        <ul className=\"nav-list\">\n        <NavLink className=\"nav-list__item\" activeClassName=\"active\" exact  to=\"/\"> All</NavLink>\n        <NavLink className=\"nav-list__item\" activeClassName=\"active\"  to=\"/active\"> Active</NavLink>\n        <NavLink className=\"nav-list__item\" activeClassName=\"active\"  to=\"/completed\"> Completed</NavLink>  \n        </ul>\n      </nav>\n\n\n    <div className=\"form-control\">\n    <input className=\"input\" onChange={(e)=>handleOnChange(e)} \n      name=\"todo\"\n      value={todo}\n      \n      type=\"text\"/> \n      <button className=\"btn btn-primary\" onClick={handleAdd}>add</button>\n    </div>\n\n     \n      <Route path=\"/\" exact>\n\n      \n       \n         <TodoItem todoList={todoList} handleCheck={handleCheck} />\n       </Route>\n       <Route path=\"/active\" exact>\n        \n         <TodoItem todoList={todoList.filter(item=> item.completed===false)} handleCheck={handleCheck} />       \n      \n         </Route>\n         <Route path=\"/Completed\" exact>\n  \n         <TodoItem todoList={todoList.filter(item=> item.completed===true)} handleCheck={handleCheck} />   \n         </Route>\n      </div>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\VioLaToR\\Desktop\\devChallenge\\Frontend\\challenge\\todo\\src\\TodoItem.js",["17","18","19"],"import React from 'react'\r\n\r\n\r\nfunction TodoItem(props){\r\n\r\n  const   {todoList,item,completed,handleCheck, id} = props\r\n\r\n\r\n    return (\r\n        <ul className=\"todo__list\">\r\n\r\n            {\r\n                todoList.length ? todoList.map((item,index)=>{\r\n                    return(\r\n                        <li key={index} className=\"todo__list-item\">\r\n                        <input onChange={handleCheck} className=\"checkbox\" id={item.id} checked={item.completed} type=\"checkbox\"/>\r\n                        <label className=\"label\"  htmlFor={item.id}>{item.item}</label>\r\n                        </li>\r\n                    )\r\n                })\r\n\r\n                : <h1 className=\"notFound\">no item found</h1>\r\n               \r\n            }\r\n              \r\n        </ul>\r\n     \r\n    )\r\n}\r\n\r\nexport default TodoItem",{"ruleId":"20","severity":1,"message":"21","line":59,"column":7,"nodeType":"22","messageId":"23","endLine":59,"endColumn":10},{"ruleId":"20","severity":1,"message":"24","line":6,"column":21,"nodeType":"22","messageId":"23","endLine":6,"endColumn":25},{"ruleId":"20","severity":1,"message":"25","line":6,"column":26,"nodeType":"22","messageId":"23","endLine":6,"endColumn":35},{"ruleId":"20","severity":1,"message":"26","line":6,"column":49,"nodeType":"22","messageId":"23","endLine":6,"endColumn":51},"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","'item' is assigned a value but never used.","'completed' is assigned a value but never used.","'id' is assigned a value but never used."]